@page "/projects"
@using DependencyCrawler.Contracts.Interfaces.Repositories
@using DependencyCrawler.Contracts.Interfaces.Model
@inject IReadOnlyProjectProvider ReadOnlyProjectProvider;

<RadzenDataGrid AllowGrouping="true" AllowSorting="true" AllowColumnResize="true" Data="@projects" TItem="IReadOnlyProject" AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true">
	<Columns>
		<RadzenDataGridColumn TItem="IReadOnlyProject" Property="NameReadOnly" Title="Name"/>
		<RadzenDataGridColumn TItem="IReadOnlyProject" Property="ProjectTypeReadOnly" Title="ProjectType"/>
		<RadzenDataGridColumn TItem="IReadOnlyProject" Property="ReferenceLayerReadOnly" Title="ReferenceLayer"/>
		<RadzenDataGridColumn TItem="IReadOnlyProject" Property="DependencyLayerReadOnly" Title="DependencyLayer"/>
		<RadzenDataGridColumn TItem="IReadOnlyProject" Property="DependencyLayerInternalReadOnly" Title="DependencyLayerInternal" />
	</Columns>
</RadzenDataGrid>

@code
{
	protected override async Task OnInitializedAsync()
	{
		projects = ReadOnlyProjectProvider.AllProjectsReadOnly.Values;
	}

	private IEnumerable<IReadOnlyProject> projects = new List<IReadOnlyProject>();
}
