@page "/caches"
@using DependencyCrawler.Contracts.Interfaces.Repositories
@using DependencyCrawler.Data.Contracts.Entities
@inject ICacheManager CacheManager

<RadzenDataGrid @ref="_grid" AllowGrouping="true" AllowSorting="true" AllowColumnResize="true" Data="@_caches" TItem="Cache" AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true">
	<HeaderTemplate>
		<RadzenTextBox @oninput="@(args => _cacheName = args.Value.ToString())"/>
		<RadzenButton Click="@AddCache" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Success"/>
		<RadzenButton Icon="save" Click="@SaveCaches" Text="Save caches"/>
		<RadzenButton Icon="save" Click="@ReloadCaches" Text="Reload caches"/>
	</HeaderTemplate>
	<Columns>
		<RadzenDataGridColumn TItem="Cache" Property="Id" Title="ID"/>
		<RadzenDataGridColumn TItem="Cache" Property="Name" Title="Name"/>
		<RadzenDataGridColumn TItem="Cache" Property="State" Title="State"/>
		<RadzenDataGridColumn TItem="Cache" Property="Timestamp" Title="Timestamp"/>
		<RadzenDataGridColumn TItem="Cache">
			<Template Context="cache" >
				<RadzenButton Icon="task_alt" Click="@(_ => ActivateCache(cache))" ButtonStyle="ButtonStyle.Info" />
				<RadzenButton Icon="save" Click="@(_ => SaveCache(cache))" ButtonStyle="ButtonStyle.Success" />
				<RadzenButton Icon="delete" Click="@(_ => DeleteCache(cache))" ButtonStyle="ButtonStyle.Danger" />
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

@code
{
	private IReadOnlyList<Cache> _caches = new List<Cache>();
	private RadzenDataGrid<Cache> _grid = new();
	private string? _cacheName;

	protected override async Task OnInitializedAsync()
	{
		_caches = CacheManager.Caches;
	}

	private void AddCache()
	{
		CacheManager.SaveAsNewCache(_cacheName);
		Reload();
	}

	private void SaveCaches()
	{
		CacheManager.SaveAllCaches();
		Reload();
	}

	private void ReloadCaches()
	{
		CacheManager.ReloadCaches();
		Reload();
	}

	private void SaveCache(Cache cache)
	{
		CacheManager.SaveAsExistingCache(cache.Id);
		Reload();
	}

	private void DeleteCache(Cache cache)
	{
		CacheManager.DeleteCache(cache.Id);
		CacheManager.SaveAllCaches();
	}

	private void ActivateCache(Cache cache)
	{
		CacheManager.ActivateCache(cache.Id);
	}

	private void Reload()
	{
		_caches = CacheManager.Caches;
		_grid.Reload();
	}
}
